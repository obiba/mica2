package obiba.mica;
option java_package = "org.obiba.mica.web.model";
import "Mica.proto";

message JoinQueryResultDto {
  optional QueryResultDto variableResultDto = 1;
  optional QueryResultDto datasetResultDto = 2;
  optional QueryResultDto studyResultDto = 3;
  optional QueryResultDto networkResultDto = 4;
}

message QueryResultDto {
  repeated AggregationResultDto aggs = 1;
  required int32 totalHits = 2;
  required int64 totalCount = 3;

  optional DatasetVariableResultDto variableResult = 4;
  optional DatasetResultDto datasetResult = 5;
  optional StudyResultDto studyResult = 6;
  optional NetworkResultDto networkResult = 8;
  repeated StudySummaryDto summaries = 9;
}

message DatasetVariableResultDto {
  repeated obiba.mica.DatasetVariableResolverDto summaries = 1;
  repeated obiba.mica.DatasetVariableDto variables = 2;
  repeated obiba.mica.DatasetDto datasets = 3;
}

message DatasetResultDto {
  repeated obiba.mica.DatasetDto datasets = 1;
  repeated obiba.mica.DocumentDigestDto digests = 2;
}

message StudyResultDto {
  repeated obiba.mica.StudySummaryDto summaries = 1;
  repeated obiba.mica.StudyDto studies = 2;
  repeated obiba.mica.DocumentDigestDto digests = 3;
}

message NetworkResultDto {
  repeated obiba.mica.NetworkDto networks = 1;
  repeated obiba.mica.DocumentDigestDto digests = 2;
}

message AggregationResultDto {
  required string aggregation = 1;
  repeated LocalizedStringDto title = 2;
  repeated AggregationResultDto children = 3;
  repeated StatsAggregationResultDto stats = 5;
  repeated TermsAggregationResultDto terms = 4;
  repeated RangeAggregationResultDto ranges = 6;
}

message TermsAggregationResultDto {
  required string key = 1;
  optional string title = 2;
  optional string description = 3;
  optional string className = 4;
  required int32 count = 6;
  repeated AggregationResultDto aggs = 7;
  optional string start = 8;
  optional string end = 9;
  optional string sortField = 10;
}

message StatsAggregationResultDataDto {
  required int64 count = 1;
  optional double min = 2;
  optional double max = 3;
  optional double avg = 4;
  optional double sum = 5;
}

message StatsAggregationResultDto {
  required StatsAggregationResultDataDto data = 2;
}

message RangeAggregationResultDto {
  required string key = 1;
  optional string title = 2;
  optional string description = 3;
  optional string className = 4;
  required int64 default = 5;
  required int64 count = 6;
  optional double from = 7;
  optional double to = 8;
  repeated AggregationResultDto aggs = 9;
}

message BucketCoverageDto {
  required string field = 1;
  required string value = 2;
  required int32 hits = 3;
  optional int32 count = 4;
  optional string title = 5;
  optional string description = 6;
  optional string className = 7;
  optional string start = 8;
  optional string end = 9;
  optional string sortField = 10;
}

message TermCoverageDto {
  required obiba.mica.TaxonomyEntityDto term = 1;
  required int32 hits = 2;
  repeated BucketCoverageDto buckets = 3;
}

message VocabularyCoverageDto {
  required obiba.mica.TaxonomyEntityDto vocabulary = 1;
  required int32 hits = 2;
  optional int32 count = 3; // sum of the hits of vocabulary allows multiple terms
  repeated BucketCoverageDto buckets = 4;
  repeated TermCoverageDto terms = 5;
}

message TaxonomyCoverageDto {
  required obiba.mica.TaxonomyEntityDto taxonomy = 1;
  required int32 hits = 2;
  repeated BucketCoverageDto buckets = 3;
  repeated VocabularyCoverageDto vocabularies = 4;
}

message TaxonomiesCoverageDto {
  repeated TaxonomyCoverageDto taxonomies = 1;
  required int32 totalHits = 2;
  required int64 totalCount = 3;
  repeated string by = 4;
  optional JoinQueryResultDto queryResult = 5;
}

message BucketsCoverageDto {
  message HeaderDto {
    required obiba.mica.TaxonomyEntityDto entity = 1;
    required int32 hits = 2;
    required int32 termsCount = 3;
  }
  message RowDto {
    required string field = 1;
    required string value = 2;
    optional string title = 3;
    optional string description = 4;
    optional string className = 5;
    repeated int32 hits = 6;
    repeated int32 counts = 7;
    optional string start = 8;
    optional string end = 9;
    optional string sortField = 10;
  }
  repeated HeaderDto taxonomyHeaders = 1;
  repeated HeaderDto vocabularyHeaders = 2;
  repeated HeaderDto termHeaders = 3;
  repeated RowDto rows = 4;
  optional EntitiesTotalCountsDto totalCounts = 5;
}

message ChartsCoverageDto {

  message ChartDataItemDto {
    required string key = 1;
    required int32 value = 2;
    required string title = 3;
  }

  message ChartTermDataDto {
    required string term = 1;
    repeated ChartDataItemDto items = 2;
  }

  message ChartDataDto {
    required string vocabulary = 1;
    repeated ChartDataItemDto items = 2;
    repeated ChartTermDataDto termItems = 3;
  }

  message ChartDto {
    required string title = 1;
    optional string subtitle = 2;
    required string taxonomy = 3;
    repeated ChartDataDto data = 4;
  }

  repeated ChartDto charts = 1;
}

message VariableEntitiesCountDto {
  required string query = 1;
  required DocumentDigestDto variable = 2;
  required int32 count = 3 [default = 0];
  repeated LocalizedStringDto studyTableName = 4;
}

message DatasetEntitiesCountDto {
  required DocumentDigestDto dataset = 1;
  repeated VariableEntitiesCountDto counts = 2;
}

message StudyEntitiesCountDto {
  required string entityType = 1;
  required string query = 2; // original query restricted to study variables
  required DocumentDigestDto study = 3;
  required int32 total = 4 [default = 0]; // all criteria count
  required bool belowPrivacyThreshold = 5 [default = false];
  repeated DatasetEntitiesCountDto counts = 6;
}

message EntitiesCountDto {
  required string query = 1; // original query
  required int32 total = 2 [default = 0]; // sum of the study counts
  required bool belowPrivacyThreshold = 3 [default = false];
  repeated StudyEntitiesCountDto counts = 4;
}

message EntityTotalCountDto {
  required int64 total = 1;
  required int32 hits = 2;
}

message EntitiesTotalCountsDto {
  optional EntityTotalCountDto studyTotalCount = 1;
  optional EntityTotalCountDto datasetTotalCount = 2;
  optional EntityTotalCountDto variableTotalCount = 3;
  optional EntityTotalCountDto networkTotalCount = 4;
}
